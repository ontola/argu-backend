.col-2.col-2--small
  header
    h2= t('discussions.new.what_kind')
  .col-2-1
    .box
      section
        p
          span= t('questions.call_to_action.body') + ' '
          =link_to polymorphic_url([:new, get_parent_resource, :question])
            b.question-t= t('questions.call_to_action.action')
    =link_to polymorphic_url([:new, get_parent_resource, :question])
      .box.question
        .box-image--container
          .box-image.bg-img[style="background-image: url('#{asset_path('new-discussion-question-cover.jpg')}'); "]
        section.section-info
          .details
            .details-part.details-part--type.question-bg[data-title=t('questions.tooltips.info')]
              span[class="fa fa-#{question_icon}"]
              span.icon-left= question_type
            .details-part[data-title=t('tooltips.question.motions_count')]
              span.fa.fa-lightbulb-o
              span.icon-left 2
        section
          h3.question-t= t('discussions.new.question_title')
          ul.box-list.box-list--icons
            li
              h3.motion-t
                span.fa.fa-lightbulb-o
                span.icon-left= t('discussions.new.question_motion1')
            li
              h3.motion-t
                span.fa.fa-lightbulb-o
                span.icon-left= t('discussions.new.question_motion2')
    .btn--question.btn--huge[collection_model="Question"]
      =link_to polymorphic_url([:new, get_parent_resource, :question])
        h3
          span[class="fa fa-#{question_icon}"]
          span.icon-left= t('questions.type_new')
  .col-2-1
    .box
      section
        p
          span= t('motions.call_to_action.body') + ' '
          =link_to polymorphic_url([:new, get_parent_resource, :motion])
            b.motion-t= t('motions.call_to_action.action')
    =link_to polymorphic_url([:new, get_parent_resource, :motion])
      .box.motion
        .box-image--container
          .box-image.bg-img[style="background-image: url('#{asset_path('new-discussion-motion-cover.jpg')}'); "]
        section.section-info
          .details
            .details-part.details-part--type.motion-bg[data-title=t('motions.tooltips.info')]
              span[class="fa fa-#{motion_icon}"]
              span.icon-left= motion_type
            .details-part.details-part--pro[data-title=t('tooltips.motion.vote_pro_count')]
              span.fa.fa-thumbs-up
              span.icon-left 13
            .details-part.details-part--con[data-title=t('tooltips.motion.vote_con_count')]
              span.fa.fa-thumbs-down
              span.icon-left 5
        section
          h3.motion-t= t('discussions.new.motion_title')
          ul.box-list.box-list--arguments.box-list--icons
            li
              h3[class="pro-t tooltip--wider"]
                span.fa.fa-plus
                span.icon-left= t('discussions.new.motion_argument1')
            li
              h3[class="pro-t tooltip--wider"]
                span.fa.fa-plus
                span.icon-left= t('discussions.new.motion_argument2')
          ul.box-list.box-list--arguments.box-list--icons
            li
              h3[class="con-t tooltip--wider"]
                span.fa.fa-minus
                span.icon-left= t('discussions.new.motion_argument3')
    .btn--motion.btn--huge[collection_model="Motion"]
      =link_to polymorphic_url([:new, get_parent_resource, :motion])
        h3
          span[class="fa fa-#{motion_icon}"]
          span.icon-left= t('motions.type_new')
-if get_parent_resource.respond_to?(:projects) && policy(Project.new(forum: resource_tenant)).new?
  .col-1.col-1--small
    header
      h2=t('discussions.new.or_start_a_project')
    .box
      section
        p
          span= t('projects.call_to_action.body') + ' '
          =link_to polymorphic_url([:new, get_parent_resource, :project])
            b.motion-t= t('projects.call_to_action.action')
    =link_to polymorphic_url([:new, get_parent_resource, :project])
      .box.motion
        .box-image--container
          /.box-image.bg-img[style="background-image: url('#{asset_path('new-discussion-motion-cover.jpg')}'); "]
        section.section-info
          .details
            .details-part.details-part--type.project-bg[data-title=t('projects.tooltips.info')]
              span[class="fa fa-#{blog_post_icon}"]
              span.icon-left= t('projects.type')
            .details-part[data-title=t('blog_posts.tooltips.count')]
              span.fa.fa-bullhorn
              span.icon-left 3
            .details-part[data-title=t('questions.tooltips.count')]
              span.fa.fa-question
              span.icon-left 3
            .details-part[data-title=t('tooltips.question.motions_count')]
              span.fa.fa-lightbulb-o
              span.icon-left 4
        section
          h3.project-t= t('discussions.new.project_title')
    .btn--project.btn--huge[collection_model="Project"]
      =link_to polymorphic_url([:new, get_parent_resource, :project])
        h3
          span[class="fa fa-rocket"]
          span.icon-left= t('projects.type_new')
