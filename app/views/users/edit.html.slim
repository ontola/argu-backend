=set_title t('pages.settings.title')
.col-1
  =render partial: 'profiles/profile_bar'
  .box
    =semantic_form_for @user, url: settings_path, method: :put do |f|
      section
        =f.semantic_errors :email, :base
        =f.inputs name: t('users.registrations.categories.general') do
          p= t('profiles.edit.shortname_not_allowed')
          =f.inputs :shortname, for: :shortname, disabled: true
          =f.input :email, label: t('users_email'), value: @user.email, placeholder: @user.email.blank? ? t('users_email_placeholder') : @user.email
          =f.input :time_zone


        - if active_for_user?(:notifications, current_user)
          =f.inputs name: t('users.registrations.categories.notifications') do
            .notification-settings-header
              label
              .notification-settings-half-block
                i.fa.fa-envelope-o[title="_email notificaties_"]
                i.fa.fa-mobile[title="_Mobiele notificaties_"]
            li
              label= t('formtastic.labels.notifications.follows')
              .notification-settings-half-block
                span.center
                  =f.input :follows_email, as: :inline_select, collection: options_for_follows_email, include_blank: false, label: false
                span.center
                  =f.check_box :follows_mobile
            li
              label= t('formtastic.labels.notifications.memberships')
              .notification-settings-half-block
                span.center
                  =f.input :memberships_email, as: :inline_select, collection: options_for_memberships_email, include_blank: false, label: false
                span.center
                  =f.check_box :memberships_mobile
            li
              label= t('formtastic.labels.notifications.created')
              .notification-settings-half-block
                span.center
                  =f.input :created_email, as: :inline_select, collection: options_for_created_email, include_blank: false, label: false
                span.center
                  =f.check_box :created_mobile

        =f.inputs name: t('users.registrations.categories.privacy') do
          =f.input :has_analytics, as: :reverse_boolean
          =f.semantic_fields_for :profile do |profile|
            =profile.input :are_votes_public, as: :reverse_boolean
        =f.inputs name: t('users.registrations.categories.authentication') do
          -if @user.password_required?
            =f.input :password, label: t('users_password_edit'), required: @user.new_record?
            =f.input :password_confirmation, label: t('users_password_confirmation')
            =f.input :current_password
          -else
            p Je hebt nog geen wachtwoord omdat je je via social media hebt aangemeld, klik hier om een Argu wachtwoord aan te maken.
            p= link_to t('devise.passwords.new.submit'), password_path(@user), class: 'btn', data: {method: :post, :'skip-pjax' => true}, rel: :nofollow
          - if @user.identities.present?
            label= t('users_oauth_coupled')
            =render partial: 'authentications/login_providers_connected', locals: { identities: @user.identities, show_decouple: (@user.password_required? || @user.identities.length > 1) }

          /TODO Hide authentications that are already present.
          - if login_providers_left(@user).present?
            label= t('users_oauth_new')
            .form-item
              =render partial: 'authentications/login_providers', locals: {providers: login_providers_left(@user)}
          - elsif !@user.password_required? && @user.identities.length == 1

            p= t('users.authentications.cant_decouple_note_provider', provider: @user.identities.first.provider)

        =f.inputs name: t('forms.danger_zone'), class: 'danger-zone' do
          label= t('users_cancel_title')
          .form-item
            =link_to t('users_cancel_title'), cancel_user_registration_path(current_user)

        =f.actions do
          =f.action :submit, :as => :button, label: t('save')
