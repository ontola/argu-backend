div[class=(opinion.pro ? "box pro" : "box con")]
  =link_to opinion.title, opinion_path(opinion), class: opinion.pro ? "title" : "title"
  =content_tag :p, class: 'intro collapsible' do
    ==((content = opinion.supped_content)[0..500] + (content_tag(:span, content[501..content.length].to_s) if content[501]).to_s)
  /= render partial: "arguments/shr", locals: { opinion: opinion }
  br
  -if opinion.comment_threads.present?
    =link_to opinion_path(opinion) + "#commentstitle" do
      .topcomment
        span.commentsnumber.infobar= opinion.comments_count.to_s + (opinion.comments_count == 1 ? ' reactie:' : " reacties:")
        br
        p= opinion.comment_threads.first.body[0..150] + (opinion.comment_threads.first.body[151] ? '...' : '')
  -else
    =link_to opinion_path(opinion) do
      .topcomment
        span.commentsnumber.infobar= t "opinions.comments.none"