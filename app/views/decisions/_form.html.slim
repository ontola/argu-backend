section
  h3
    span[class="fa fa-#{decision_icon(decision)}"]
    span.icon-left= decision_state(decision)
  =f.input :state, as: :hidden
  - if decision.forwarded? && decision.state_was == 'pending'
    =f.label t('decisions.forward_to')
    =react_component 'ActorSelect', thing: "o/#{decision.decisionable.owner.forum.page.url}", groups: group_select_options(decision.decisionable.owner.forum)
    - if decision.errors.present?
      p.inline-errors.full-width=decision.errors.full_messages[0]
    =f.input :forwarded_group_id, as: :hidden
    =f.input :forwarded_user_id, as: :hidden
  =f.label t('decisions.explanation')
  =f.input :content, as: :text, label: false, input_html: { class: 'input--full', rows: 5 }
  =f.semantic_fields_for :happening do |hf|
    - if decision.approved? || decision.rejected?
      =hf.input :happened_at, as: :datetime_picker, label: t('decisions.happened_at')
    - else
      =hf.input :happened_at, as: :hidden
  - if !decision.is_published?
    =f.semantic_fields_for :edge do |ef|
      =ef.semantic_fields_for :argu_publication do |pf|
        =pf.input(:publish_type, as: :radio, collection: {direct: 0, draft: 1}.map { |type| [t("publications.type.#{type.first.to_s}"), type.first] })
.section.section--footer
  =render partial: 'profiles/profile_current' if current_profile.present?
  ul.sticky--bottom-right.btns-horizontal.btns-list--subtle
    - if decision.new_record?
      =f.action :submit, as: :button, label: t('save')
    - else
      =f.action :submit, as: :button, label: t('update')
