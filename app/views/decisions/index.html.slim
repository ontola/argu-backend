=set_title decisionable
=connected_web url: motion_url(decisionable),
        name: seolized_title(decisionable),
        description: seolized_description(decisionable),
        image: decisionable.default_cover_photo&.url || image_url('logo-social.png')

div[itemscope="itemscope" itemtype="http://www.schema.org/Answer"]
  .cover-behind
    .cover-image.bg-img[style="background-image: url('#{decisionable.default_cover_photo&.url(:cover)}'); "]
  .col-1
    div[data-intro= t('intro.motion.back')]= to_parent(decisionable)
    =render partial: 'contextualize/context_horizontal', locals: {item: decisionable, type: 'motion'}
    .col--motion
      .motion-body[data-intro= t('intro.motion.body')]= render partial: 'motions/body', locals: { motion: decisionable }
  .col-1
    - if decisionable.state == 'pending'
      .box
        section
          - if decisionable.assigned_user.present?
            p= "#{t('decisions.assigned.to_user')} #{assigned_name(decisionable.assigned_user, decisionable.assigned_group, true)}".html_safe
          - else
            p= "#{t('decisions.assigned.to_group')} '#{assigned_name(decisionable.assigned_user, decisionable.assigned_group, true)}'"
          - if policy(decisionable.new_decision(:forwarded)).create?
            p
              - if decisionable.assigned_to_user?(current_user)
                - Decision.actioned_keys.each do |state|
                  =link_to(t("decisions.action.#{state}"),
                          new_decision_path(decisionable.edge, state: state),
                          class: 'btn btn--smaller btn--neutral')
                  span &nbsp;
              - else
                =link_to(t("decisions.forward"),
                        new_decision_path(decisionable.edge, state: 'forwarded'),
                        class: 'btn btn--smaller btn--neutral')
    - if local_assigns[:new_decision]
      .box
        =semantic_form_for(new_decision, url: motion_decisions_path(decisionable.edge), class: 'decision_form') do |f|
          =render partial: 'decisions/form', locals: {f:f, decisionable: decisionable, decision: new_decision}
    - decisionable.decisions.reverse.each do |d|
      .box
        - if d == local_assigns[:edit_decision]
          =semantic_form_for(local_assigns[:edit_decision], url: decision_path(local_assigns[:edit_decision]), class: 'decision_form') do |f|
            =render partial: 'decisions/form', locals: {f:f, decisionable: decisionable, decision: local_assigns[:edit_decision]}
        - elsif !d.pending?
          =render partial: d
