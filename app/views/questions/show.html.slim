-provide :title, @question.title
.cover-behind
  .cover-image[style="background-image: url('http://www.nederlandfietsland.nl/uploads/image/foto-gallerij/LF14_fietspad_bij_De_Lutte_RvN_Mayke_van_der_Ploeg.JPG'); "]
.col-1
  = to_parent
  .box[class="#{'trashed' if @question.is_trashed?}"]
    section.section-info.que-bg
      span = t("questions.type")
    section
      h1.que-t= @question.title
      p= @question.supped_content.html_safe
    - if @question.tags.present?
      = render partial: 'tags/tags', locals: {resource: @question}
    = render @question.creator, locals= {resource: @question}
    -if policy(@question).update?
      ul.btns-list.btns-sticky.btns-sticky-bottom.btns-vertical
        -if policy(@question).destroy?
          li= link_to url_for([@question, destroy: true]), method: :delete, data: {confirm: t("destroy_confirmation")} do
            span.fa.fa-close
            span.icon-left=t('destroy')
        -if policy(@question).trash?
          li= link_to url_for(@question), method: :delete, data: { confirm: t("trash_confirmation") } do
            span.fa.fa-trash
            span.icon-left=t('trash')
        li= link_to url_for([:edit, @question]) do
          span.fa.fa-pencil
          span.icon-left=t('edit')
==render_columns({'' => {collection: policy_scope(@motions)}}, collection_model: Motion, buttons_url: url_for([:new, @forum, :motion, question_id: @question.id]))