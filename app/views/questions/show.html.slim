=set_title question
=connected_web url: question_url(question),
               name: seolized_title(question),
               description: seolized_description(question),
               image: question.default_cover_photo&.url || image_url('logo-social.png')
.cover-behind
  .cover-image.bg-img[style="background-image: url('#{question.default_cover_photo&.url}'); "]
.col-1
  div[data-intro= t('intro.question.back')]= to_parent
  =render partial: 'contextualize/context_horizontal', locals: {item: question, type: 'question'}
  .box[class=status_classes_for(question) data-intro= t('intro.question.body') itemscope="itemscope" itemtype="http://schema.org/Question"]
    =render partial: 'questions/info_bar', locals: {question: question}
    section
      h1.question-t[itemprop="headline"]= question.title
      .markdown[itemprop="text"]
        =markdown_to_html(question.content)
      span.hidden[itemprop="answerCount"]= question.motions_count
    =render question.creator, locals= {resource: question}
    ul.btns-list--subtle.sticky--bottom-right.btns-horizontal.btns-list--grey-background
      - if current_user.present?
        li[data-title=I18n.t('tooltips.follow')]
          =react_component 'ActiveToggle',
                           {url: follows_path(question_id: question.id, format: :json),
                            initialState: current_user.following?(question),
                            true_props: {method: 'DELETE', icon: 'bell-slash', label: t('unfollow')},
                            false_props: {method: 'POST', icon: 'bell', label: t('follow')}},
                           {prerender: true}
      =crud_menu_item(question, question_items(question))
      - if question.forum.visibility
        li
          ul= react_component 'ShareDropdown', share_items(question), {prerender: true}
.col-1
  .intro-filler[data-intro= t('intro.question.motions') data-position= "top"]
=render_columns({'' => {collection: @motions}},
                header: motions_type(question),
                header_text: 'test',
                collection_model: Motion,
                partial: 'question_answers/show',
                show_new_buttons: policy_with_tenant!(authenticated_context, Motion).new?,
                buttons_url: polymorphic_url([:new, question, :motion]),
                buttons_text: t('add_type', type: motion_type(question)),
                page_param: :page,
                buttons_icon: 'fa-lightbulb-o',
                buttons_header: @motions.present? && 'Heb jij een beter idee?',
                buttons_class: 'box-link--motion')
=render partial: 'discussions/new', locals: {forum: authenticated_context}
