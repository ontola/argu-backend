=semantic_form_for resource, url: resource.iri_path, multipart: true, remote: false, authenticity_token: true do |f|
  =f.input :lock_version, as: :hidden
  =f.input :active, value: local_assigns[:active], as: :hidden
  - resource.errors.full_messages.each do |message|
    =message
  =f.inputs name: t('forums.settings.title') do
    =f.input :name
    =f.input :bio, as: :text, input_html: { rows: 2, maxlength: 80}
    =f.input :bio_long, as: :text, input_html: { rows: 4}
    -if policy(resource).shortname?
      =f.input :url, as: :shortname
      li.form-helper
        span= t('forums.shortname.warning')
    =f.input :locale, as: :react_select, collection: locale_select_items, required: false, include_blank: false, clearable: false, searchable: true
    =react_component_store 'MapPicker', props: map_picker_props(resource)
  =render partial: 'photos/form',
          locals: {form: f,
                   type: :profile_photo,
                   relation: :default_profile_photo,
                   preview_style: 'max-height: 256px;'}
  =render partial: 'photos/form',
          locals: {form: f,
                   type: :cover_photo,
                   relation: :default_cover_photo,
                   preview_style: 'max-height: 256px;'}
  =f.inputs name: t('grants.plural').capitalize do
    p= t('groups.description')
    - if @grants.any?
      table.styled
        thead
          tr
            td= t('groups.type')
            td[colspan='2' style="min-width: 90px;"]= t('groups.members')
            td= t('roles.plural').capitalize
        - @grants.each do |grant|
          tr
            td
              =link_to grant.group.display_name, settings_iri_path(grant.group)
            td
              =link_to grant.group.group_memberships.count, settings_iri_path(grant.group)
            td
              - if policy(grant.group).create_child?(:group_memberships)
                =link_to new_iri_path(grant.group, :group_memberships), class: 'btn--light btn--smaller' do
                  span.fa.fa-plus
            td
              =t("roles.types.#{grant.grant_set.title}")
              - if grant.edge_id == resource.edge.uuid
                =t('roles.list.remove_html', url: grant_path(grant))
              - else
                =<"(#{t('grants.all_forums')})"
    - if policy(resource.edge).create_child?(:grants)
      =link_to new_iri_path(resource.parent_model(:page), :grants, edge_id: resource.edge), class: 'btn btn--mini btn--light margin-bottom' do
        span.fa.fa-plus
        span.icon-left= t('grants.new')
    =f.input :public_grant, as: :react_select, collection: options_for_public_grant, clearable: false, wrapper_html: {class: 'form-col-2'}
  -if current_user.is_staff?
    =f.inputs name: t('forms.staff_only'), class: 'danger-zone' do
      =f.input :discoverable, as: :boolean
      =link_to t('forums.settings.shortnames'), settings_iri_path(resource, tab: :shortnames), class: 'btn btn--light'
      =link_to t('forums.settings.banners.title'), settings_iri_path(resource, tab: :banners), class: 'btn btn--light'
      =link_to t('formtastic.labels.f_move'), move_iri_path(resource), class: 'btn btn--light', remote: true
      =link_to t('formtastic.labels.f_delete'), delete_iri_path(resource), class: 'btn btn--warning', remote: true
  =f.input :tab, input_html: {value: local_assigns[:tab]}, as: :hidden
  =f.actions do
    =f.action :submit, as: :button
