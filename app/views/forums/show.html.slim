-content_for :connected_web
  meta[name="description" content="#{@forum.bio}"]
  meta[property="og:title" content="#{@forum.display_name}"]
  meta[property="og:url" content="#{forum_url(@forum)}"]
  meta[property="og:description" content="#{@forum.bio}"]
  meta[property="og:image" content="#{@forum.cover_photo.url}"]
  meta[property="twitter:card" content="summary"]
  meta[property="twitter:title" content="#{@forum.display_name}"]
  meta[property="twitter:description" content="#{@forum.bio}"]
  /meta[property="twitter:creator" content="#{@forum.page.twitter_url}"]
  meta[property="twitter:image" content="#{@forum.cover_photo.url}" ]
-provide :title, @forum.display_name
div[itemscope itemtype="Thing"]
  .cover
    -if @forum.cover_photo.url.present?
      .cover-image[style="background-image: url('#{@forum.cover_photo.url(:cover)}')"]
      span.header-attribution=@forum.cover_photo_attribution
    .cover-header
      .cover-container
        .center
          = react_component 'HyperDropdown', forum_title_dropdown_items(@forum), {prerender: true}
          ul.btns-sticky.btns-list.btns-subtle=render partial: 'application/menus/settings', locals: {resource: @forum}
          p.cover-oneliner
            = @forum.bio
            - if @forum.bio_long.present?
              a[href="#forum-info"]
                span.icon-left= t('forums.more_info')
        ul.btns-list.btns-vertical
          /TODO: Make this check the current profile, not the user
          - if !policy(@forum).is_member?
            li=link_to forum_memberships_path(@forum.web_url), method: :post do
              span.fa.fa-user
              span.icon-left= t('join')
          - elsif active_for_user?(:notifications, current_user)
            li.dropdown
              a.dropdown-trigger href="#"
                span[class="fa #{ current_profile.following?(@forum) ? 'fa-check' : 'fa-times'}"]
                span.icon-left notificaties
                span.fa.fa-angle-down
              ul.dropdown-content.dropdown-right
                - if current_profile.following?(@forum)
                  li=link_to follows_path(forum_id: @forum.web_url), method: :delete do
                    span.fa.fa-times
                    span.icon-left _unfollow_
                -else
                  li=link_to follows_path(forum_id: @forum.web_url), method: :create do
                    span.fa.fa-check
                    span.icon-left _follow_
          li[data-intro=t('intro.motion.create', name: @forum.name) class="tooltip" data-title=t('tooltips.motion.create')]= link_to url_for([:new, @forum, :motion]), data: remote_unless_user, class: "sta-t btn-focus" do
            span.fa.fa-plus
            span.icon-left= t('motions.type')
          li[data-intro=t('intro.question.create', name: @forum.name) class="tooltip" data-title=t('tooltips.question.create')]= link_to url_for([:new, @forum, :question]), data: remote_unless_user, class: "que-t btn-focus" do
            span.fa.fa-plus
            span.icon-left= t('questions.type')
          - if policy(@forum).invite?
            li=link_to new_user_invitation_path(forum: @forum.web_url), remote: true, class: "pro-t btn-focus tooltip", data: {title: t('tooltips.forum.invite')} do
              span.fa.fa-group
              span.icon-left= t('forums.invite_others')
  - if policy(@forum).show?
    .center
      ul.btns-list
        li
          a.expander[data-intro=t('intro.forum.filter')]
            span=t("filtersort.filter_&_sort")
            span.fa.fa-angle-down
    .filter-and-sort.expander-content
      #type
        ul.tags.tags-type
          li
            a.tag.tag-all.is-checked[data-filter="" data-forum-path="#{forum_path(@forum)}"]= t("filtersort.all")
          li
            a.tag.tag-motions[data-filter="motion"]= t("filtersort.motions")
          li
            a.tag.tag-questions[data-filter="question"]= t("filtersort.questions")
      - if @forum.featured_tags.present?
        #tags
          ul.tags[itemprop="keywords"]
            a[class="tag" data-filter="filterByTag" data-filter-value="" data-forum-path="#{forum_path(@forum)}"]
              .span.fa.fa-eraser
            - @forum.featured_tags.each do |tag|
              li
                a[class="tag" rel="tag" href="#{forum_tag_path(@forum, tag)}" data-filter='filterByTag' data-filter-value=tag data-forum-path="#{forum_path(@forum)}"]= tag
      #sorts
        ul.btns-list.btns-vertical
          li
            //TODO: Make date the default one to be checked.s
            a[data-sort-value="updated_at" class="is-checked"]
              span.fa.fa-fire
              span.icon-left= t("filtersort.updated_at")
          li
            a[data-sort-value="created_at"]
              span.fa.fa-clock-o
              span.icon-left= t("filtersort.created_at")
          /li
            a[data-sort-value="name"]
              span.fa.fa-sort-alpha-asc
              span.icon-left= t("filtersort.name")
          li
            a[data-sort-value="score"]
              span.fa.fa-thumbs-up
              span.icon-left= t("filtersort.score")
          li
            a[data-sort-value="random" id="sort-random"]
              span.fa.fa-gift
              span.icon-left= t("filtersort.random")
    .grid
      .box.box-grid-sizer[data-intro=t('intro.forum.grid') data-position="top"]
      -@items.each do |item|
        = render item
      .box.box-grid.motion[ data-created-at="0" data-updated-at="0" data-score="-999" data-tags="#{@forum.featured_tags.join(',')}"]=link_to url_for([:new, @forum, :motion]), data: {remote: true} do
        section.section-fill.sta-bg
          h2= t("motions.call_to_action.title")
        section
          p= t("motions.call_to_action.body")
          p
            b.sta-t
              span.fa.fa-plus
              span.icon-left= t("motions.call_to_action.action")
      .box.box-grid.question[ data-created-at="0" data-updated-at="0" data-score="-999" data-tags="#{@forum.featured_tags.join(',')}"]=link_to url_for([:new, @forum, :question]), data: {remote: true} do
        section.section-fill.que-bg
          h2= t("questions.call_to_action.title")
        section
          p= t("questions.call_to_action.body")
          p
            b.que-t
              span.fa.fa-plus
              span.icon-left= t("questions.call_to_action.action")
    .col-1
      header#forum-info
        h1 = t("forums.about.header")
      .box
        - if @forum.bio_long.present?
          section
            p= @forum.bio_long
        section
          p
            b == t("forums.about.body")