.cover
  -if @forum.cover_photo.url.present?
    .cover-image[style="background-image: url('#{@forum.cover_photo.url(:cover)}')"]
  .cover-header
    .cover-container
      .dropdown
        h1.dropdown-trigger[href="#"]
          span= @forum.name
          -if Rails.configuration.epics.forum_selector
            span.fa.fa-angle-down
        -if Rails.configuration.epics.forum_selector
          ul.dropdown-content
            - current_profile.present? && current_profile.memberships.each do |membership|
              li
                =link_to membership.forum.display_name, url_for(membership.forum)
            - if suggested_forums.present?
              span.dropdown-header = t('forums.suggestions')
              ul.tags-vertical
                - suggested_forums.each do |forum|
                  li
                    =link_to forum.display_name, url_for(forum)
      ul.btns-list.btns-vertical
        /TODO: Make this check the current profile, not the user
        - if !policy(@forum).is_member?
          li=link_to forum_memberships_path(@forum.web_url), method: :create, class: "btn-focus" do
            span.fa.fa-group
            span.icon-left = t("join")
        - else
          li[data-intro=t('intro.question.create', name: @forum.name)]=link_to url_for([:new, @forum, :question]) do
            span.fa.fa-plus.que-t
            span.icon-left.que-t= t("questions.type")
          li[data-intro=t('intro.motion.create', name: @forum.name)]=link_to url_for([:new, @forum, :motion]) do
            span.fa.fa-plus.sta-t
            span.icon-left.sta-t= t("motions.type")
          =render partial: 'application/menus/settings', locals: { resource: @forum }
- if policy(@forum).show?
  .filter-and-sort
    /.tags
      - @forum.featured_tags.each do |tag|
        = contextual_link_to(tag, forum_tag_url(@forum.web_url, tag), class: "tag", title: t("motions.titles.tags")+tag)
    #filters[data-intro=t('intro.forum.filter')]
      ul.tags
        li
          a.tag.tag-motions[data-filter=".motion"]= t("motions.header")
        li
          a.tag.tag-questions[data-filter=".question"]= t("questions.header")
      ul.tags
        - @forum.featured_tags.each do |tag|
          li
            /a = contextual_link_to(tag, forum_tag_url(@forum.web_url, tag), class: "tag", title: t("motions.titles.tags")+tag, 'data-filter'=>'filterByTag', 'data-filter-value'=>tag)
            a[class="tag" data-filter='filterByTag' data-filter-value=tag] = tag
    #sorts[data-intro=t('intro.forum.sort')]
      ul.btns-list.btns-vertical
        li
          //TODO: Make date the default one to be checked.s
          a[data-sort-value="date"]
            span.fa.fa-clock-o
            span.icon-left= t("sort.newest")
        li
          a[data-sort-value="name"]
            span.fa.fa-sort-alpha-asc
            span.icon-left= t("sort.name")
        li
          a[data-sort-value="score"]
            span.fa.fa-sort-amount-desc
            span.icon-left= t("sort.score")
        /li
          a[data-sort-value="random"]
            span.fa.fa-gift
            span.icon-left= t("sort.random")
  .grid
    .box.box-grid-sizer[data-intro=t('intro.forum.grid') data-position="top"]
    -@items.each do |item|
      = render item