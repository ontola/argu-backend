=semantic_form_for(group, url: group_url, method: :patch) do |f|
  - group.errors.full_messages.each do |message|
    =message
  =f.inputs name: t('update_type', type: t('groups.type')) do
    =f.inputs :name, :name_singular, :icon
    =f.input :visibility, as: :select, collection: Hash[Group.visibilities.map { |k, v| [k, k] }], required: false, include_blank: false
    =f.input :max_responses_per_member, min: -1
  =f.actions do
    =f.action :submit, :as => :button
h3= t('grants.plural').capitalize
- if group.grants.empty?
  p= t('grants.empty')
- else
  - group.grants.includes(:edge).group_by { |g| g.edge.owner_type }.each do |type, grants|
    table.styled.grants
      thead
        tr
          td= type
          td= t('grants.type').capitalize
      - grants.each do |grant|
        tbody
          tr
            td
              =link_to grant.edge.owner.display_name, grant.edge.owner
            td
            =grant.role.capitalize
h3= t('group_memberships.plural')
- if group.group_memberships.empty?
  p= t('group_memberships.empty')
- else
  table.styled.members
    tbody
      - group.group_memberships.includes(member: {profileable: :shortname}).each do |membership|
        tr[class=membership.member.identifier]
          td.name= membership.member.display_name
          td= link_to group_membership_path(membership, r: edit_group_path(group)), data: {method: :delete, turbolinks: 'false', confirm: t('destroy_confirmation')}, class: 'btn--light btn--smaller' do
            span.fa.fa-close
            span.icon-left= t('destroy')
