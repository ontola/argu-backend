.box[class=status_classes_for(resource)]
  section
    =link_to resource
      h3[itemprop="headline" class="blog-post-t"]= resource.title
    .markdown[itemprop="text"]
      =markdown_to_html(resource.content)
  section.section--attachments
    =react_component_store 'Gallery', props: gallery_props(resource)
  section.section--footer
    =render partial: resource.creator, locals: {resource: resource}
    ul.btns-list--subtle.btns-horizontal.sticky--bottom-right.btns-list--grey-background
      =dropdown_menu(resource, :actions)
      li.share-menu
        ul= dropdown_menu(resource, :share, item_opts: {isMobile: browser.device.mobile?})
      - if resource.top_comment.present? && policy(resource).index_children?(:comments)
        li
          =link_to blog_post_path(resource) + '#comments'
            .dropdown
              span.fa.fa-comments
              span.icon-left= t('reply_count', comment_count: resource.children_count(:comments))
      - elsif policy(resource).create_child?(:comments)
        li
          =link_to blog_post_path(resource) + '#comments'
            .dropdown
              span.fa.fa-comments
              span.icon-left= t('reply')
- unless resource.is_published?
  =render partial: 'application/publish', locals: {resource: resource}
