.comment[id=c.identifier class="#{'trashed' if c.is_trashed?}" itemscope="itemscope" itemtype="http://schema.org/Comment"]
  .box
    section
      .markdown[id=c.id itemprop="text"]= c.is_trashed? ? I18n.t('trashed') : markdown_to_html(c.body) || I18n.t('deleted')
        =markdown_to_html(motion.content)
    =render partial: c.profile, locals: {resource: c} if c.profile.present?
    ul.btns-sticky.btns-sticky-bottom.btns-horizontal.btns-list
      - if current_user.present? && policy(c).update? || active_for_user?(:notifications, current_user)
        li
          ul= react_component 'HyperDropdown', comment_items(resource, c), {prerender: true}
      - if !c.is_trashed? && policy(c).create?
        li= link_to polymorphic_url([resource], parent_id: c.id), html_options = {id: c.id, class: 'btn-reply', :'data-skip-pjax' => true} do
          span.fa.fa-reply
          span.icon-left = t('reply')
  .comment.comment-form
    .box= render partial: 'comments/form', locals: { resource: resource, parent_id: c.id, visible: false }
  - if c.has_children?
    - c.children.each do |ch|
      =render partial: 'comments/comment', locals: { resource: resource, c: ch }
    =link_to t('opinions.comments.more'), '/' if c.children.length > 40