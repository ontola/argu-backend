.comment[id=c.identifier class=status_classes_for(c) itemscope="itemscope" itemtype="http://schema.org/Comment"]
  .box
    section
      .markdown[id=c.id itemprop="text"]= c.is_trashed? ? I18n.t('trashed') : markdown_to_html(c.body) || I18n.t('deleted')
        =markdown_to_html(motion.content)
    section.section--footer
      =render partial: 'profiles/profile', locals: {profile: c.creator, resource: c} if c.creator.present?
      ul.sticky--bottom-right.btns-horizontal.btns-list--subtle
        - unless current_user.guest?
          li
            ul= dropdown_menu(c, :follow)
        - if policy(c).update? || policy(c).trash?
          li
            ul= react_component_store 'HyperDropdown', props: comment_items(c)
        - if !c.is_trashed? && policy(c.parent_model).create_child?(:comments, parent_id: c.id)
          li= link_to polymorphic_url([resource], parent_id: c.id), {data: { comment_id: c.id, turbolinks: 'false' }, class: 'btn-reply'} do
            span.fa.fa-reply
            span.icon-left= t('reply')
  .comment.comment-form
    .box= render partial: 'comments/form', locals: { resource: resource, parent_id: c.id, visible: false, comment: Comment.new }
  - if c.has_children?
    - c.children.reject { |c| c.abandoned? }.each do |ch|
      =render partial: 'comments/comment', locals: { resource: resource, c: ch }
    =link_to t('comments.more'), '/' if c.children.length > 40
