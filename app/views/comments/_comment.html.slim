.comment[id=c.identifier class=status_classes_for(c) itemscope="itemscope" itemtype="http://schema.org/Comment"]
  .box
    section
      .markdown[id=c.id itemprop="text"]= c.is_trashed? ? I18n.t('trashed') : markdown_to_html(c.body) || I18n.t('deleted')
        =markdown_to_html(motion.content)
    =render partial: 'profiles/profile', locals: {profile: c.profile, resource: c} if c.profile.present?
    ul.btns-sticky.btns-sticky-bottom.btns-horizontal.btns-list--subtle
      - if current_user.present? && policy(c).update? || active_for_user?(:notifications, current_user)
        li
          ul= react_component 'HyperDropdown', comment_items(resource, c), {prerender: true}
      - if current_user.present? && active_for_user?(:notifications, current_user)
        li= react_component 'ActiveToggle',
                         {url: follows_path(comment_id: c.id, format: :json),
                          initialState: current_user.following?(c),
                          true_props: {method: 'DELETE', icon: 'bell-slash', label: t('unfollow')},
                          false_props: {method: 'POST', icon: 'bell', label: t('follow')}},
                         {prerender: true}
      - if !c.is_trashed? && policy(c).update?
        li= link_to polymorphic_url_for_action(:edit, [resource, c], {}), {data: { remote: :true, comment_id: c.id, turbolinks: false }, class: 'btn-edit'} do
          span.fa.fa-edit
          span.icon-left= t('edit')
      - if !c.is_trashed? && policy(c).create?
        li= link_to polymorphic_url([resource], parent_id: c.id), {data: { comment_id: c.id, turbolinks: false }, class: 'btn-reply'} do
          span.fa.fa-reply
          span.icon-left= t('reply')
  .comment.comment-form
    .box= render partial: 'comments/form', locals: { resource: resource, parent_id: c.id, visible: false, comment: Comment.new(commentable: c) }
  - if c.has_children?
    - c.children.reject { |c| c.abandoned? }.each do |ch|
      =render partial: 'comments/comment', locals: { resource: resource, c: ch }
    =link_to t('arguments.comments.more'), '/' if c.children.length > 40
