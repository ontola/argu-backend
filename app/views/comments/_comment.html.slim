.comment[class="#{'trashed' if c.is_trashed?}" itemscope itemtype="http://schema.org/Comment"]
  .box
    section
      p[id="#{c.id}"]= c.is_trashed? ? I18n.t('deleted') : c.body
    = render c.profile, locals= {resource: c} if c.profile.present?
    ul.btns-sticky.btns-sticky-bottom.btns-vertical.btns-list
      - if policy(c).destroy?
        li= link_to polymorphic_url([resource, c], destroy: true), method: :delete, data: {confirm: t('destroy_confirmation')} do
          span.fa.fa-close
          span.icon-left = t('destroy')
      - if policy(c).trash?
        li= link_to polymorphic_url([resource, c]), method: :delete do
          span.fa.fa-trash
          span.icon-left = t('trash')
      - if !c.is_trashed? && policy(c).create?
        li= link_to polymorphic_url([resource], parent_id: c.id), html_options = {id: c.id, class: "btn-reply"} do
          span.fa.fa-reply
          span.icon-left = t('reply')
  .comment.comment-form
    .box= render partial: 'comments/form', locals: { resource: resource, parent_id: c.id, visible: false }
  - if c.has_children?
    - c.children.each do |ch|
      = render partial: 'comments/comment', locals: { resource: resource, c: ch, depth: depth+1 }
    = link_to t('opinions.comments.more'), '/' if c.children.length > 40