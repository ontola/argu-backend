=semantic_form_for([resource, comment], html: {id: "cf#{parent_id.to_s}", class: 'comment_form', autocomplete: 'off', style: local_assigns[:visible] ? '' : 'display: none;'}, remote: true) do |f|
  section.smallpadded
    =f.text_area :body, :rows => 2, :cols => 50, placeholder: t('comments.placeholder'), class: 'form-input-content margin-bottom'
    -comment.errors.full_messages.each do |message|
      p.inline-errors.full-width= message
    -if parent_id.present? || comment.parent_id.present?
      input[type="hidden" class= "btn" name="comment[parent_id]" value ="#{parent_id.presence || comment.parent_id}"]
  section.section--footer
    - if comment.blank? || comment.new_record?
      =render partial: 'profiles/profile_current'
    - else
      =render partial: comment.creator, locals: {resource: comment}
    ul.sticky--bottom-right.btns-horizontal.btns-list--subtle
      - if comment.persisted? && (local_assigns[:remote].nil? || local_assigns[:remote] == true)
        li
          div
            a.btn-cancel[data-comment-id="#{comment.id}"] X &nbsp;
      =f.action :submit, as: :button, label: comment_form_label(comment)
