.center.motion-shr
  ul.btns-opinion[class= "#{'voted' if vote.present? && !vote.for?('abstain')}" data-intro= t("intro.motion.vote")]
    li = link_to motion_vote_path(model, 'pro'), class: "btn-pro#{' voted-on' if vote.for?('pro')}", remote: true, method: :post do
      span.fa.fa-thumbs-up
      span.icon-left = t('motions.votes.pro')
    li = link_to motion_vote_path(model, 'neutral'), class: "btn-neu#{' voted-on' if vote.for?('neutral')}", remote: true, method: :post do
      span.fa.fa-pause
      span.icon-left = t('motions.votes.neu')
    li = link_to motion_vote_path(model, 'con'), class: "btn-con#{' voted-on' if vote.for?('con')}", remote: true, method: :post do
      span.fa.fa-thumbs-down
      span.icon-left = t('motions.votes.con')
  //TODO: Hide voting results when user is signed in, but hasn't voted yet. Show voting results when user clicks on "show votes" button.
  /a.btn.btn-subtle
    span.fa.fa-pie-chart
    span.icon-left = t('motions.votes.show')
  -if vote.present?
    ul class="progress-bar progress-bar-stacked collapse-me collapse-closed"
      li[style="width: #{progress_bar_width(model, :pro)}%;"]
        span class="btn-pro"= "#{model.votes_pro_count}"
      li[style="width: #{progress_bar_width(model, :neutral)}%;"]
        span class="btn-neu"= "#{model.votes_neutral_count}"
      li[style="width: #{progress_bar_width(model, :con)}%;"]
        span class="btn-con"= "#{model.votes_con_count}"