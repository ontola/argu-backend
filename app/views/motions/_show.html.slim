.box.box--extra-margin[class=status_classes_for(model)]
  -if model.cover_photo.present?
    =link_to motion_path(model)
      .box-image[style="background-image: url('#{model.cover_photo.url(:box)}'); "]
  =link_to(motion_path(model), 'aria-hidden': true, tabindex: '-1')
    =render partial: 'motions/info_bar', locals: {motion: model, show_vote_results: true}
  section[itemscope="itemscope" itemtype="http://www.schema.org/Answer"]
    =link_to(motion_path(model), 'aria-hidden': true, tabindex: '-1')
      h3.motion-t[itemprop="headline"]= model.title
    =render partial: 'application/markdown_collapsible', locals: {content: model.content, identifier: model.identifier, character_length: 350}
    - unless local_assigns[:hide_vote_buttons] || current_profile && current_profile.owner.is_a?(Page)
      .motion-votes= react_component 'VoteButtons', motion_vote_props(current_profile, model, user_vote_for(model), buttons_type: 'subtle'), prerender_options
    - if model.arguments.present?
      ul.box-list.box-list--arguments.box-list--icons
        - model.top_arguments_pro_light.each do |argument|
          li= link_to argument_path(argument[0])
            h3[class="pro-t tooltip--wider" data-title=(active_for_user?(:argument_tooltips_content, current_user) ? (safe_truncated_text(argument[4], '...')) : nil)]
              span.fa.fa-plus
              span.icon-left= argument[1]
      ul.box-list.box-list--arguments.box-list--icons
        - model.top_arguments_con_light.each do |argument|
          li= link_to argument_path(argument[0])
            h3[class="con-t tooltip--wider" data-title=(active_for_user?(:argument_tooltips_content, current_user) ? (safe_truncated_text(argument[4], '...')) : nil)]
              span.fa.fa-minus
              span.icon-left= argument[1]
    =link_to motion_path(model), class: 'btn-subtle sticky--bottom-right'
      span.icon-right= t('read_more')
      span.fa.fa-arrow-right
  =yield
