.box.box--extra-margin.motion[class=status_classes_for(model)]
  - if model.default_cover_photo.present?
    =link_to motion_path(model)
      =render partial: 'application/box_image', locals: {url: model.default_cover_photo.url(:box), type: 'motion'}
  section[itemscope="itemscope" itemtype="http://www.schema.org/Answer"]
    =link_to motion_path(model)
      h3.motion-t[itemprop="headline"]= model.title
  = render partial: 'motions/info_bar', locals: {motion: model, show_vote_pie: true, show_profile: true, show_date: true}
  section
    =render partial: 'application/markdown_collapsible', locals: {content: model.content, identifier: model.identifier, character_length: 350}
    - unless local_assigns[:hide_vote_buttons] || current_profile && current_profile.profileable.is_a?(Page)
      .motion-votes= react_component_store 'SmallVoteApp', props: { voteableType: 'motions', voteableId: model.id }
  - if model.top_arguments_pro.present? || model.top_arguments_con.present?
    section.section--no-top-padding
      ul.box-list.box-list--arguments.box-list--icons
        - model.top_arguments_pro.first(5).each do |argument|
          li= link_to argument_path(argument.id)
            h4[class="pro-t tooltip--wider"]
              span.fa.fa-plus
              .list-item.icon-left
                span[data-title=(active_for_user?(:argument_tooltips_content, current_user) ? (safe_truncated_text(argument.content, '...')) : nil)]= argument.title
                - if argument.comments_count > 0
                  .comments-counter.comments-counter--inline
                    .fa.fa-comment
                    .icon-left= argument.comments_count
      ul.box-list.box-list--arguments.box-list--icons
        - model.top_arguments_con.first(5).each do |argument|
          li= link_to argument_path(argument.id)
            h4[class="con-t tooltip--wider"]
              span.fa.fa-minus
              .list-item.icon-left
                span[data-title=(active_for_user?(:argument_tooltips_content, current_user) ? (safe_truncated_text(argument.content, '...')) : nil)]= argument.title
                - if argument.comments_count > 0
                  .comments-counter.comments-counter--inline
                    .fa.fa-comment
                    .icon-left= argument.comments_count
  =link_to motion_path(model), class: 'btn-subtle sticky--bottom-right'
    span.icon-right= t('read_more')
    span.fa.fa-arrow-right
  =yield
