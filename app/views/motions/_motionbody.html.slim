.box[class="#{'trashed' if motion.is_trashed?}"]
  section.section-info.motion-bg
    span[class="fa fa-#{motion_icon}"]
    span.icon-left= motion_type
  section.markdown
    h1.motion-t= motion.title
    p= Redcarpet::Markdown.new(Redcarpet::Render::HTML.new(filter_html: true, escape_html: true), {tables: true, fenced_code_blocks: false, no_styles: true, escape_html: true}).render(motion.content).html_safe
  /TODO: Fix tags link
  /- if motion.tags.present?
    ul[class="tags" data-intro= t("intro.tags")]= render partial: 'tags/tags', locals: {resource: motion}
  =render partial: motion.creator, locals: {resource: motion}
  ul.btns-list.btns-vertical.btn-sticky-bottom.btn-sticky
    - if current_user.present? && policy(motion).update? || active_for_user?(:notifications, current_user)
      li
        ul= react_component 'HyperDropdown', motion_items(motion), {prerender: true}
    li
      ul= react_component 'HyperDropdown', share_items(motion), {prerender: true}