.box[class="#{'trashed' if motion.is_trashed?}"]
  section.section-info.sta-bg
    span = t("motions.type")
  section
    h1.sta-t= motion.title
    p= motion.supped_content.html_safe
  /TODO: Fix tags link
  /- if motion.tags.present?
    ul[class="tags" data-intro= t("intro.tags")]= render partial: 'tags/tags', locals: {resource: motion}
  =render partial: motion.creator, locals: {resource: motion}
  ul.btns-list.btns-vertical.btn-sticky-bottom.btn-sticky
    -if policy(motion).destroy?
      li= link_to motion_path(motion, destroy: true), method: :delete, data: {confirm: t("destroy_confirmation")} do
        span.fa.fa-close
        span.icon-left=t('destroy')
    -if policy(motion).trash?
      li= link_to motion_path(motion), method: :delete, data: {confirm: t("trash_confirmation")} do
        span.fa.fa-trash
        span.icon-left=t('trash')
    -if policy(motion).update?
      li= link_to edit_motion_path(motion) do
        span.fa.fa-pencil
        span.icon-left=t('edit')
    - if active_for_user? :notifications, current_user
      li
        ul
          =react_component 'HyperDropdown', motion_items(motion), {prerender: true}