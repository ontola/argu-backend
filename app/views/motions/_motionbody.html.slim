.box[class="#{'trashed' if motion.is_trashed?}"]
  section.section-info.motion-bg
    span[class="fa fa-#{motion_icon}"]
    span.icon-left= motion_type
  section
    h1.motion-t= motion.title
    p= motion.supped_content.html_safe
  /TODO: Fix tags link
  /- if motion.tags.present?
    ul[class="tags" data-intro= t("intro.tags")]= render partial: 'tags/tags', locals: {resource: motion}
  =render partial: motion.creator, locals: {resource: motion}
  ul.btns-list.btns-vertical.btn-sticky-bottom.btn-sticky
    -if policy(motion).destroy?
      li= link_to motion_path(motion, destroy: true), method: :delete, data: {confirm: t('destroy_confirmation')} do
        span.fa.fa-close
        span.icon-left= t('destroy')
    -if policy(motion).trash?
      li= link_to motion_path(motion), method: :delete, data: {confirm: t('trash_confirmation')} do
        span.fa.fa-trash
        span.icon-left= t('trash')
    - if current_user.present? && policy(motion).update? || active_for_user?(:notifications, current_user)
      li
        ul= react_component 'HyperDropdown', motion_items(motion), {prerender: true}
    li
      ul= react_component 'HyperDropdown', share_items(motion), {prerender: true}