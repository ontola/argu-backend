section.section--details
  .detailsBar
    - if local_assigns[:show_type]
      .detail[data-title=t('motions.tooltips.info')]
        .detail__icon.detail__icon--type.motion-bg
          span[class="fa fa-#{motion_icon}"]
        .detail__text
            span= motion_type
    - if local_assigns[:show_parent]
      - unless params[:controller] == 'projects'
        - if motion.question_id
          =link_to motion.parent_model
            .detail[data-title=t('questions.go_to_parent')]
              .detail__icon
                span.question-t.fa.fa-question
              .detail__text
                span[itemprop="headline"]= truncate(motion.parent_model.title, length: 30)
        - elsif motion.project_id
          =link_to motion.parent_model
            .detail[data-title=t('projects.go_to_parent')]
              .detail__icon
                span.project-t.fa.fa-rocket
              .detail__text
                span[itemprop="headline"]= truncate(motion.parent_model.title, length: 30)
    - if local_assigns[:show_vote_pie] && motion.default_vote_event.total_vote_count.positive?
      .detail[data-title=t('motions.percentage_in_favor', percentage: motion.default_vote_event.votes_pro_percentage, count: motion.default_vote_event.total_vote_count)]
        .detail__icon
          .vote-pie-container
            =react_component_store 'VotePie', props: motion_vote_counts(motion)
        .detail__text
          .span
            =motion.default_vote_event.total_vote_count
    - if local_assigns[:show_profile]
      =render partial: 'profiles/detail_profile', locals: {resource: motion}
    - if local_assigns[:show_vote_results]
      .details-parts
        =react_component_store 'VoteStats', props: motion_vote_counts(motion)
    - if local_assigns[:show_date]
      .detail
        .detail__icon
          .fa.fa-clock-o
        .detail__text
          time[datetime=motion.created_at ]= awesome_time_ago_in_words motion.created_at
    - if motion.pinned?
      .detail[data-title=t('edges.pinned_at', datetime: motion.edge.pinned_at.to_formatted_s(:short))]
        .detail__icon
          span.fa.fa-map-pin
    - if local_assigns[:show_decision]
      - if (motion.state == 'pending') && policy(motion.last_or_new_decision(true)).update?
        div class="detail detail--decision detail--interactive detail--decision--#{motion.state}"
          =react_component('HyperDropdown', decision_items(motion), {prerender: true}) if decision_items(motion)[:sections].first[:items].present?
      - elsif motion.state != 'pending'
        div class="detail detail--decision--#{motion.state}"
          .detail__icon
            div class="fa fa-#{decision_icon(motion)}"
          .detail__text
            =t("decisions.#{motion.state}")
