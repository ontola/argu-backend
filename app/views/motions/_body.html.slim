.box[class="#{'trashed' if motion.is_trashed?}"]
  section.section-info.motion-bg
    span[class="fa fa-#{motion_icon}"]
    span.icon-left= motion_type
  section
    h1.motion-t[itemprop="headline"]= motion.title
    .markdown[itemprop="text"]
      =markdown_to_html(motion.content)
  /TODO: Fix tags link
  /- if motion.tags.present?
    ul[class="tags" data-intro= t("intro.tags")]= render partial: 'tags/tags', locals: {resource: motion}
  =render partial: motion.creator, locals: {resource: motion}
  ul.btns-list--subtle.btns-horizontal.btn-sticky-bottom.btn-sticky.btns-list--grey-background
    - if active_for_user?(:notifications, current_user) && current_profile.present?
      li[data-title=I18n.t('tooltips.follow')]
        =react_component 'ActiveToggle', {url: follows_path(motion_id: motion.id, format: :json),
                                          initialState: current_profile.following?(motion),
                                          true_props: {method: 'DELETE', icon: 'bell-slash', label: t('unfollow')},
                                          false_props: {method: 'POST', icon: 'bell', label: t('follow')}},
                         {prerender: true}
    - if current_user.present? && policy(motion).update?
      li
        ul= react_component 'HyperDropdown', motion_items(motion), {prerender: true}
    li
      ul= react_component 'HyperDropdown', share_items(motion), {prerender: true}
