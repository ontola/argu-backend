=set_title @user || @page || @profile
=connected_web url: dual_profile_path(@profile),
               name: seolized_title(@user || @page || @profile),
               description: seolized_description(@user || @page || @profile),
               image: @profile.profile_photo
=render partial: 'profiles/profile_bar', locals: {resource: @profile, active: :show} if policy(@profile).update?
.cover-behind
  .cover-image[style="background-image: url('#{@profile.cover_photo.url(:cover)}'); "]
.col-1

  =image_tag @profile.profile_photo.url(:avatar), container_class: 'profile', class: 'profile-picture--big'
  .profile.profile-big[data-intro= t('intro.profile.show', name: @profile.display_name)]
    .box
      section
        h1
          =@profile.display_name
        - if @profile.roles.pluck(:name).include?('staff')
          span.role Staff
        p.quote= @profile.about
        label Forums:
        ul.icon-list.margin-bottom
          - @profile.forums.where(visibility: true).each do |forum|
            li
              = link_to forum_path(forum) do
                span= forum.name
.boxes-list[data-intro= t('intro.profile.votes') data-position="top"]
  - if @profile.are_votes_public? && @profile.votes.count > 0
    .col-1
      .intro-filler[data-intro= t("intro.profile.votes") data-position="top"]
    =render_columns(@collection, collection_model: Vote)
  - elsif @profile.are_votes_public?
    h2.center= t('profiles.didnt_vote_name', name: @profile.display_name)
