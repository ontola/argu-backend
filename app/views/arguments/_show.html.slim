- top_comment = model.top_comment
.box.box-with-btns.argument[id="#{model.id.present? ? 'argument_' + model.id.to_s : ''}" class="side-#{model.pro ? 'pro' : 'con'}#{' trashed' if model.is_trashed}"]
  section
    =contextual_link_to argument_path(model)
      h3[class="#{model.pro ? 'pro-t' : 'con-t'}"]= model.title
    =render partial: 'arguments/shr', locals: {model: model}
    p[class='wrap-normal']
      ==model.truncate_preview(250, {length_in_chars: true, ellipsis: contextual_link_to('... ' + t('read-more'), argument_path(model)) })
  - if !top_comment.present?
    =contextual_link_to argument_path(model), class: ' btn-subtle btn-sticky btns-sticky-bottom read-more'
      span.icon-right reageer
      span.fa.fa-comments
  - if top_comment.present?
    =link_to argument_path(model) + '#commentstitle'
      section.top-comment[class="#{'trashed' if top_comment.is_trashed?}"]
        p.wrap-normal= top_comment.is_trashed? ? '[DELETED]' : top_comment.body[0..150] + (top_comment.body[151] ? '...' : '')
        .read-more
          span.icon-right= model.comments_count.to_s
          span.fa.fa-comments