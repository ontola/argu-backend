.box[id="#{@argument.id.present? ? 'argument_' + @argument.id.to_s : ''}" class="side-#{@argument.pro ? 'pro' : 'con'}"]
  section.section-info[class="#{@argument.pro ? 'pro' : 'con'}-bg"]
    span= @argument.pro ? t('arguments.form.side.pro') : t('arguments.form.side.con')
  section
    h1[class=(@argument.pro ? 'pro-t' : 'con-t') itemprop="headline"]= @argument.title
    = render partial: 'arguments/shr', locals: {model: @argument}
    = content_tag :p, raw(@argument.supped_content), itemprop: 'text'
    = print_references @argument
  =render @argument.creator, locals= {resource: @argument}
  ul.btns-list.btns-vertical.btn-sticky.btn-sticky-bottom
    - if policy(@argument).destroy?
      li= link_to(argument_path(@argument), method: :delete, destroy: true) do
        span.fa.fa-close
        span.icon-left= t("destroy")
    - if policy(@argument).trash?
      li= link_to(argument_path(@argument), method: :delete) do
        span.fa.fa-trash
        span.icon-left= t("trash")
    - if policy(@argument).update?
      li= link_to(edit_argument_path(@argument)) do
        span.fa.fa-pencil
        span.icon-left= t("edit")
    - if active_for_user? :notifications, current_user
      =react_component 'HyperDropdown', argument_items(@argument), {prerender: true}