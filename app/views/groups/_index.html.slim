h3= t('groups.plural')
p= t('groups.description')
table.styled
  thead
    tr
      td= t('groups.type')
      td[colspan='2' style="min-width: 90px;"]= t('groups.members')
      td[colspan='2']= t('roles.plural').capitalize
  - page.groups.custom.includes(:grants, group_memberships: {member: {profileable: {}}}).each do |group|
    tr
      td
        =link_to group.display_name, settings_iri_path(group)
      td
        =link_to group.group_memberships.count, settings_iri_path(group)
      td
        - if policy(group).create_child?(:group_memberships)
          =link_to new_iri_path(group, :group_memberships), class: 'btn--light btn--smaller' do
            span.fa.fa-plus
      td
        - if group.grants.empty?
          = '-'
        - else
          ul
            - group.grants.each do |grant|
              li
                =>"#{grant.display_name}:"
                =t("roles.types.#{grant.grant_set.title}")
                = t('roles.list.remove_html', url: grant.iri_path)
      td
        - if policy(resource.edge).create_child?(:grants)
          =link_to new_iri_path(page, :grants, query: {edge_id: resource.edge.uuid, group_id: group.id}), class: 'btn--light btn--smaller' do
            span.fa.fa-plus
- if policy(page).create_child?(:groups)
  =link_to new_iri_path(page, :groups), class: 'btn margin-bottom margin-right' do
    span.fa.fa-plus
    span.icon-left= t('groups.new')
- if policy(resource.edge).create_child?(:grants)
  =link_to new_iri_path(page, :grants, query: {edge_id: resource.edge.uuid}), class: 'btn margin-bottom' do
    span.fa.fa-plus
    span.icon-left= t('grants.new')
