@import "variables";
@import "mixins";

.dropdown {
  position: relative;
  &:focus {
    outline: none;
  }
}

.dropdown-trigger {
  position: relative;
  cursor: pointer;
  @include transition(opacity .2s);
}

@mixin closed-state {
  @include transition(all .2s);
  @include transform (translate3d(0,1em,0));
  opacity: 0;
}

@mixin opened-state {
  @include transition(all .2s);
  @include transform (translate3d(0,0,0));
  opacity: 1;
}

.dropdown-content {
  background-color: white;
  // This isn't display: none; to make javascript return bounding box dimensions
  //visibility: hidden;
  left: 0;
  margin: 0;
  position: absolute;
  text-align: left;
  top: 100%;
  width: 15em;
  z-index: 10;
  border-top-left-radius: 0;
  overflow: hidden;
  text-transform: none;
  border-top: none;
  max-height: 30em;
  overflow-y: auto;
  @include box-shadow-intense;
  @include border-radius();
  font-size: 1em;
  -webkit-overflow-scrolling: touch;

  @include closed-state();

  @include bp-small{
    //font-size: 14px;
  }

  li {
    min-width: 100%;
  }

  a {
    color: $g3;
    padding: .6em .7em;
    min-width: 100%;
    display: block;

    &:hover, &:focus {
      background-color: $darken1;
      color: $g4;
      text-decoration: none;
    }

    &:active {
      background-color: $darken2;
      transition: none;
      outline: none;
    }

    &.is-checked {
      background-color: $darken1;
    }
  }

  h3 {
    font-size: 1.4em;
    padding: .4em 0.6em;
    margin: 0;
    text-transform: none;
    color: white;
    background-color: $g3;
  }

  .link{
    position: relative;

    span.icon-left {
      // This one causes problems, e.g. in the share dropdown, when the icons don't load. Disabling all of these seemed to work.
      padding-left: 1.5em;
      display: block;
      margin: 0;
      margin-top: -1em;
    }

    img {
      height: 1.5em;
      position: relative;
      left: -0.3em;
      margin: 0em 0 -0.6em 0;
      border-radius: 999px;
      top: -0.2em;

      & + span {

      }
    }
  }
}

.dropdown-content--helper {
  visibility: hidden;
}

.dropdown--left {
  right: 0;
  left: auto;
}

.dropdown--right{
  left: 0;
  right: auto;
}

.dropdown--top{
  bottom: 100%;
  top: auto;
}

span.dropdown-header {
  padding: .4em;
  padding-left: 1em;
  background-color: $g1;
  color: $g3;
  width: 100%;
  text-transform: uppercase;
  font-size: .8em;
  display: inline-block;
}

.navbar{
  .dropdown-active {
    .dropdown-trigger{
      background-color: $lighten2;
      &:active{
        background-color: $lighten3;
      }
    }
  }
}

// ReactCSSTransitionGroup
.dropdown-enter {
  @include closed-state();

  &.dropdown-enter-active {
    &.dropdown-content {
      @include opened-state();
    }
  }
}

.dropdown-leave{
  @include opened-state();

  &.dropdown-leave-active{
    @include closed-state();
    pointer-events: none;
  }
}

.dropdown-divider {
  display: block;
  width: 100%;
  border-top: solid 1px $g2;
}

.dropdown-title {
  float: left;
  font-weight: bold;
  padding: .6em;
  color: $g4;
}

.btns-list--subtle .dropdown-active .dropdown-trigger {
  background-color: $darken1;
  transition: .2s;
}